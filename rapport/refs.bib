@manual{cppreference,
  author = {Cpp Reference},
  title  = {C++ reference},
  url    = {https://en.cppreference.com/w/}
}

@manual{cmake,
  author = {CMake},
  title  = {CMake Reference Documentation},
  url    = {https://cmake.org/documentation/}
}

@manual{python,
  author = {Python Software Foundation},
  title  = {Python Documentation},
  url    = {https://docs.python.org/3/}
}

@manual{gcc,
  author = {Free Software Foundation},
  title  = {GCC online documentation},
  url    = {https://gcc.gnu.org/onlinedocs/}
}

@manual{git,
  author = {Git community},
  title  = {git},
  url    = {https://git-scm.com/doc}
}

@article{Clemencic_2012,
  doi       = {10.1088/1742-6596/396/5/052021},
  url       = {https://dx.doi.org/10.1088/1742-6596/396/5/052021},
  year      = {2012},
  month     = {12},
  publisher = {},
  volume    = {396},
  number    = {5},
  pages     = {052021},
  author    = {M Clemencic and P Mato},
  title     = {A CMake-based build and configuration framework},
  journal   = {Journal of Physics: Conference Series},
  abstract  = {The LHCb experiment has been using the CMT build and configuration tool for its software since the first versions, mainly because of its multi-platform build support and its powerful configuration management functionality. Still, CMT has some limitations in terms of build performance and the increased complexity added to the tool to cope with new use cases added recently. Therefore, we have been looking for a viable alternative and we have investigated the possibility of adopting the CMake tool, which does a very good job for building and is getting very popular in the HEP community. The result of this study is a CMake-based framework which provides most of the special configuration features available natively only in CMT, with the advantages of better performances, flexibility and portability.}
}

@article{Clemencic:2014bga,
  author  = {Clemencic, Marco and Couturier, B.},
  editor  = {Groep, D. L. and Bonacorsi, D.},
  title   = {{A New Nightly Build System for LHCb}},
  doi     = {10.1088/1742-6596/513/5/052007},
  journal = {J. Phys. Conf. Ser.},
  volume  = {513},
  pages   = {052007},
  year    = {2014}
}

@article{VectorizeSource-code,
  author = {Stephan Lohn},
  title  = {Vectorize Source-Code},
  month  = {12},
  year   = {2013},
  url    = {https://twiki.cern.ch/twiki/bin/view/LHCb/VectorizeSource-code}
}

@article{Saikumar:2022mgb,
  author        = {Saikumar, Dhananjay},
  title         = {{Future of computing at the Large Hadron Collider}},
  eprint        = {2210.13213},
  archiveprefix = {arXiv},
  primaryclass  = {hep-ph},
  month         = {9},
  year          = {2022}
}

@article{VIPGOforCMSReco,
  author = {Vincenzo Innocente},
  title  = {Applying PGO (Performance Guided Optimization) to CMS Reconstruction},
  month  = {6},
  year   = {2016},
  url    = {https://twiki.cern.ch/twiki/bin/view/Main/VIPGOforCMSReco}
}

@inproceedings{45290,
  title     = {AutoFDO: Automatic Feedback-Directed Optimization for Warehouse-Scale Applications},
  author    = {Dehao Chen and David Xinliang Li and Tipp Moseley},
  year      = {2016},
  booktitle = {CGO 2016 Proceedings of the 2016 International Symposium on Code Generation and Optimization},
  pages     = {12-23},
  address   = {New York, NY, USA}
}

@article{8766229,
  author  = {},
  journal = {IEEE Std 754-2019 (Revision of IEEE 754-2008)},
  title   = {IEEE Standard for Floating-Point Arithmetic},
  year    = {2019},
  volume  = {},
  number  = {},
  pages   = {1-84},
  doi     = {10.1109/IEEESTD.2019.8766229}
}

@techreport{edms784588,
  author      = {Markus Frank},
  title       = {Online Raw Data Format},
  institution = {CERN},
  year        = {2022},
  month       = {10},
  url         = {https://edms.cern.ch/ui/#!master/navigator/document?D:101144907:101144907:subDocs}
}
